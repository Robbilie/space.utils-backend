---
kind: Service
apiVersion: v1
metadata:
  name: eas-api-service
  labels:
    app: eas-api
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 4001
    protocol: TCP
  selector:
    app: eas-api
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  labels:
    app: eas-api
  name: eas-api-dep
spec:
  replicas: 3
  selector:
    matchLabels:
      app: eas-api
  template:
    metadata:
      labels:
        app: eas-api
    spec:
      containers:
      - name: eas-api-pod
        image: index.docker.io/robbilie/eas:full
        imagePullPolicy: Always
        ports:
        - containerPort: 4001
        volumeMounts:
        - name: config
          mountPath: "/etc/secrets"
          readOnly: true
        env:
        - name: APP_NAME
          value: "API"
        - name: APP_PORT
          value: "4001"
        livenessProbe:
          httpGet:
            path: /
            port: 4001
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: config
        secret:
          secretName: eas-config
---
kind: Service
apiVersion: v1
metadata:
  name: eas-ws-service
  labels:
    app: eas-ws
spec:
  type: NodePort
  ports:
  - port: 4002
  selector:
    app: eas-ws
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  labels:
    app: eas-ws
  name: eas-ws-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eas-ws
  template:
    metadata:
      labels:
        app: eas-ws
    spec:
      containers:
      - name: eas-ws-pod
        image: index.docker.io/robbilie/eas:full
        imagePullPolicy: Always
        ports:
        - containerPort: 4002
          protocol: "TCP"
        volumeMounts:
        - name: config
          mountPath: "/etc/secrets"
          readOnly: true
        env:
        - name: APP_NAME
          value: "WS"
        - name: APP_PORT
          value: "4002"
      volumes:
      - name: config
        secret:
          secretName: eas-config
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  labels:
    app: eas-worker
  name: eas-worker-dep
spec:
  replicas: 4
  selector:
    matchLabels:
      app: eas-worker
  template:
    metadata:
      labels:
        app: eas-worker
    spec:
      containers:
      - name: eas-worker-pod
        image: index.docker.io/robbilie/eas:full
        imagePullPolicy: Always
        ports:
        volumeMounts:
        - name: config
          mountPath: "/etc/secrets"
          readOnly: true
        env:
        - name: APP_NAME
          value: "Worker"
      volumes:
      - name: config
        secret:
          secretName: eas-config
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  labels:
    app: eas-fetcher
  name: eas-fetcher-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eas-fetcher
  template:
    metadata:
      labels:
        app: eas-fetcher
    spec:
      containers:
      - name: eas-fetcher-pod
        image: index.docker.io/robbilie/eas:full
        imagePullPolicy: Always
        ports:
        volumeMounts:
        - name: config
          mountPath: "/etc/secrets"
          readOnly: true
        env:
        - name: APP_NAME
          value: "Fetcher"
      volumes:
      - name: config
        secret:
          secretName: eas-config
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: eas-ingress
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - api.utils.space
    secretName: eas-ingress-tls
  rules:
  - host: api.utils.space
    http:
      paths:
      - path: /
        backend:
          serviceName: eas-api-service
          servicePort: 80